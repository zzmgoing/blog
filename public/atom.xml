<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>钟子明&amp;博客</title>
  
  
  <link href="https://blog.zzming.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.zzming.cn/"/>
  <updated>2024-07-20T14:42:04.105Z</updated>
  <id>https://blog.zzming.cn/</id>
  
  <author>
    <name>钟子明</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android面试知识总结</title>
    <link href="https://blog.zzming.cn/post/99fd5a78.html"/>
    <id>https://blog.zzming.cn/post/99fd5a78.html</id>
    <published>2022-06-11T07:43:13.000Z</published>
    <updated>2024-07-20T14:42:04.105Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><p>TCP和UDP<br>HTTP和HTTPS<br>HTTP1.0、1.1和2.0的区别<br>HTTPS原理和请求过程<br>对称和非对称加密算法<br>网络耗时优化</p><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><p>特点和特性<br>面向对象和面向过程<br>八大基本数据类型<br>四大引用类型<br>JVM的内存分配<br>GC垃圾回收机制<br>ClassLoader加载机制<br>Class类的加载过程<br>线程、多线程、线程池<br>锁、死锁</p><h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><p>Activity<br>Fragment<br>Service<br>BroadcastReceiver<br>ContentProvider<br>四大组件区别和Context<br>Animation<br>Handler机制<br>Binder机制<br>进程和多线程<br>View事件分发<br>View绘制流程<br>Gradle构建流程<br>内存泄漏<br>性能优化</p><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p>OKHttp<br>Retrofit<br>RxJava<br>EventBus<br>ARouter<br>Lifecycle<br>LiveData<br>ViewModel</p><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><p>线性结构<br>非线性结构<br>二叉树的遍历和深度<br>ArrayList数据结构<br>HashMap数据结构<br>HashSet数据结构</p><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><p>算法的特征和设计原则<br>算法的空间和时间复杂度<br>算法的分类和理解</p><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><p>为方便阅读记忆和总结，我将Android面试相关知识点归纳总结在了一起，项目地址：</p><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/zzmgoing/android-book"><img src="https://github-readme-stats.vercel.app/api/pin/?username=zzmgoing&repo=android-book&theme=vue&show_owner=true"/></a><p>欢迎大家star和fork。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网络&quot;&gt;&lt;a href=&quot;#网络&quot; class=&quot;headerlink&quot; title=&quot;网络&quot;&gt;&lt;/a&gt;网络&lt;/h1&gt;&lt;p&gt;TCP和UDP&lt;br&gt;HTTP和HTTPS&lt;br&gt;HTTP1.0、1.1和2.0的区别&lt;br&gt;HTTPS原理和请求过程&lt;br&gt;对称和非对称加</summary>
      
    
    
    
    <category term="Android面试" scheme="https://blog.zzming.cn/categories/Android%E9%9D%A2%E8%AF%95/"/>
    
    
    <category term="android" scheme="https://blog.zzming.cn/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Butterfly主题</title>
    <link href="https://blog.zzming.cn/post/2756f2af.html"/>
    <id>https://blog.zzming.cn/post/2756f2af.html</id>
    <published>2022-05-28T21:28:28.000Z</published>
    <updated>2024-07-20T15:36:24.864Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Butterfly主题"><a href="#Butterfly主题" class="headerlink" title="Butterfly主题"></a>Butterfly主题</h1><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/jerryc127/hexo-theme-butterfly"><img src="https://github-readme-stats.vercel.app/api/pin/?username=jerryc127&repo=hexo-theme-butterfly&theme=vue&show_owner=true"/></a><h2 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h2><ul><li><a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安裝文檔(一) 快速開始</a></li><li><a href="https://butterfly.js.org/posts/dc584b87/">Butterfly 安裝文檔(二) 主題頁面</a></li><li><a href="https://butterfly.js.org/posts/4aa8abbe/">Butterfly 安裝文檔(三) 主題配置-1</a></li><li><a href="https://butterfly.js.org/posts/ceeb73f/">Butterfly 安裝文檔(四) 主題配置-2</a></li><li><a href="https://butterfly.js.org/posts/98d20436/">Butterfly 安裝文檔(五) 主題問答</a></li><li><a href="https://butterfly.js.org/posts/4073eda/">Butterfly 安裝文檔(六) 進階教程</a></li><li><a href="https://butterfly.js.org/posts/b37b5fe3/">自定義代碼配色</a></li><li><a href="https://butterfly.js.org/posts/507c070f/">Butterfly添加全局吸底Aplayer教程</a></li><li><a href="https://butterfly.js.org/posts/ea33ab97/">自定義側邊欄</a></li></ul><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul><li><a href="https://cloud.tencent.com/developer/article/1987454">快速将Butterfly主题的CDN从jsDelivr切换至自建反向代理源</a></li><li><a href="https://blog.csdn.net/weixin_44318830/article/details/104884936">Hexo启动页面显示extends includes/layout.pug block content include includes</a></li><li><a href="https://blog.csdn.net/Galahadzhou/article/details/105355733">Hexo Permalink简化</a></li></ul><h2 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h2><ul><li><a href="https://akilar.top/posts/615e2dec/#%E5%BC%95%E7%94%A8-note">Akilarの外挂标签引入</a></li><li><a href="https://tzy1997.com/articles/0xiipgum/">基于Butterfly的外挂标签引入</a></li><li><a href="https://tzy1997.com/articles/hexo541u/">Hexo+Butterfly主题美化</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Butterfly主题&quot;&gt;&lt;a href=&quot;#Butterfly主题&quot; class=&quot;headerlink&quot; title=&quot;Butterfly主题&quot;&gt;&lt;/a&gt;Butterfly主题&lt;/h1&gt;&lt;a class=&quot;ghcard&quot; rel=&quot;external nofol</summary>
      
    
    
    
    <category term="主题" scheme="https://blog.zzming.cn/categories/%E4%B8%BB%E9%A2%98/"/>
    
    
    <category term="butterfly" scheme="https://blog.zzming.cn/tags/butterfly/"/>
    
  </entry>
  
  <entry>
    <title>我们结婚了</title>
    <link href="https://blog.zzming.cn/post/52aec6e1.html"/>
    <id>https://blog.zzming.cn/post/52aec6e1.html</id>
    <published>2020-10-01T08:00:00.000Z</published>
    <updated>2024-07-21T08:10:21.755Z</updated>
    
    <content type="html"><![CDATA[<div class="video"><video controls preload><source src='https://fastly.jsdelivr.net/gh/zzmgoing/assets@main/video/1609605466232679.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
    
    
    <summary type="html">我们结婚了</summary>
    
    
    
    <category term="视频" scheme="https://blog.zzming.cn/categories/%E8%A7%86%E9%A2%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Android自定义可触摸滑动的转盘（仪表盘）</title>
    <link href="https://blog.zzming.cn/post/20c6ad4c.html"/>
    <id>https://blog.zzming.cn/post/20c6ad4c.html</id>
    <published>2017-01-06T22:20:17.000Z</published>
    <updated>2024-07-20T14:42:04.105Z</updated>
    
    <content type="html"><![CDATA[<p>快要过年了，在这里提前祝小伙伴们<strong>新年快乐</strong>！<br>新的一年，要多写点有质量的技术博客，哈哈。<br>上个月写了个自定义控件，也是我们项目的新需求，我就拿出来放在DEMO里，给大家参考一下，说实话这也是我自己正儿八经地写自定义控件。以前没写过，应该是没碰到需要自己来写的需求，网上都有现成的，这就是开源的一点好处吧，哈哈。<br>先放上效果图，<strong>可以用手指来触摸滑动的转盘（仪表盘）</strong>：</p><p><img src="https://fastly.jsdelivr.net/gh/zzmgoing/assets@main/img/1510656-20480c07bc0f10e8.gif" alt="滑动的仪表盘"></p><p>松手后自动指向最近数据：</p><p><img src="https://fastly.jsdelivr.net/gh/zzmgoing/assets@main/img/1510656-99f3628ed11bda88.gif" alt="松手后自动指向最近的指针"></p><p>首先，测量确定控件的宽高，在XML里面设置宽度就行了，高度在代码里会直接设置为宽度的一半，这里宽度我设置为<strong>match_parent</strong>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//只需要设置宽度即可，高度默认为宽度的一半</span><br><span class="line"><span class="tag">&lt;<span class="name">com.zzm.zzmvp.ui.widget.FuelFillingView</span>    </span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span>    </span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>    </span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10px&quot;</span>    </span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;10px&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>测量设置宽高</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onMeasure</span><span class="params">(<span class="type">int</span> widthMeasureSpec, <span class="type">int</span> heightMeasureSpec)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">    <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> measureWidth(widthMeasureSpec);</span><br><span class="line">    setMeasuredDimension(width, width/<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据xml的设定获取宽度</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">measureWidth</span><span class="params">(<span class="type">int</span> measureSpec)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">specMode</span> <span class="operator">=</span> MeasureSpec.getMode(measureSpec);</span><br><span class="line">    <span class="type">int</span> <span class="variable">specSize</span> <span class="operator">=</span> MeasureSpec.getSize(measureSpec);</span><br><span class="line">    <span class="comment">//wrap_content</span></span><br><span class="line">    <span class="keyword">if</span> (specMode == MeasureSpec.AT_MOST)&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//match_parent或者精确值</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (specMode == MeasureSpec.EXACTLY)&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> specSize;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化各个变量，创建画笔等对象。<br>变量有圆弧的半径，半圆内长刻度的等分份数，一个长刻度内的等分份数，文字的数组，圆弧对应的矩阵等，最重要的就是手指旋转的角度，滑动的时候就是根据这个值来进行重绘。<br>我用了四个画笔，分别用来画默认的圆弧，选中的蓝色扇形，白色的扇形还有文字。<br>在<strong>onSizeChanged(int w, int h, int oldw, int oldh)</strong>方法中确定控件最终的宽高，得到圆弧的半径以及确定圆弧的矩阵。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onSizeChanged</span><span class="params">(<span class="type">int</span> w, <span class="type">int</span> h, <span class="type">int</span> oldw, <span class="type">int</span> oldh)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">    mViewWidth = w;</span><br><span class="line">    mViewHeight = h;</span><br><span class="line">    mRadius = mViewWidth / <span class="number">2</span> - dpToPx(<span class="number">10</span>);</span><br><span class="line">    mRadiusChoose = mViewWidth / <span class="number">2</span>;</span><br><span class="line">    mRadiusSmall = mRadius / <span class="number">2</span> - dpToPx(<span class="number">3</span>);</span><br><span class="line">    mRectFArc.set(-mRadius,-mRadius,mRadius,mRadius);</span><br><span class="line">    mRectFArcChoose.set(-mRadiusChoose,-mRadiusChoose,mRadiusChoose,mRadiusChoose);</span><br><span class="line">    mRectFArcSmall.set(-mRadiusSmall,-mRadiusSmall,mRadiusSmall,mRadiusSmall);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就是绘制了，主要用到了画布的中心位移，旋转，坐标的转换，计算触摸点和中心点的角度，这个让我又把勾股定理研究了一下午，哈哈。</p><p>滑动事件就是将触摸的点转换为画布坐标，计算出角度后进行重绘。<br>代码较长，就贴上全部代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Matrix;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Path;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Rect;</span><br><span class="line"><span class="keyword">import</span> android.graphics.RectF;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Typeface;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.util.TypedValue;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zzm.zzmlibrary.utils.LogUtils;</span><br><span class="line"><span class="keyword">import</span> com.zzm.zzmvp.R;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by ZhongZiMing on 2016/12/21.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FuelFillingView</span> <span class="keyword">extends</span> <span class="title class_">View</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">float</span> <span class="variable">startAngle</span> <span class="operator">=</span> <span class="number">180</span>; <span class="comment">//圆弧起始角度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">float</span> <span class="variable">sweepAngle</span> <span class="operator">=</span> <span class="number">180</span>; <span class="comment">//旋转的角度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mViewWidth,mViewHeight; <span class="comment">//控件的宽和高</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mRadius; <span class="comment">//默认圆弧半径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mStrokeWidth; <span class="comment">//默认圆弧宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mRadiusChoose;<span class="comment">//蓝色扇形半径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mRadiusSmall;<span class="comment">//白色扇形半径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> selectedColor; <span class="comment">//选中状态的颜色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> unSelectedColor; <span class="comment">//未选中状态的颜色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> backgroundColor; <span class="comment">//背景颜色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">mSection</span> <span class="operator">=</span> <span class="number">10</span>; <span class="comment">// 长刻度等分份数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">mPortion</span> <span class="operator">=</span> <span class="number">5</span>;  <span class="comment">// 一个长刻度等分份数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mScaleLongLenth; <span class="comment">//长刻度相对圆心的长度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mScaleShortLenth; <span class="comment">//短刻度相对圆心的长度</span></span><br><span class="line">    <span class="keyword">private</span> String[] mTexts ; <span class="comment">//长刻度上的文字数组</span></span><br><span class="line">    <span class="keyword">private</span> String[] mTextsValue; <span class="comment">//跟刻度数字对应的值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaintArc; <span class="comment">//默认圆弧</span></span><br><span class="line">    <span class="keyword">private</span> Paint mPaintArcChoose; <span class="comment">//选中的蓝色扇形</span></span><br><span class="line">    <span class="keyword">private</span> Paint mPaintArcSmall; <span class="comment">//内部白色扇形</span></span><br><span class="line">    <span class="keyword">private</span> Paint mPaintText; <span class="comment">//文字</span></span><br><span class="line">    <span class="keyword">private</span> Path mPath;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RectF mRectFArc;  <span class="comment">// 默认圆弧</span></span><br><span class="line">    <span class="keyword">private</span> RectF mRectFArcChoose;  <span class="comment">// 蓝色扇形</span></span><br><span class="line">    <span class="keyword">private</span> RectF mRectFArcSmall;  <span class="comment">//白色扇形</span></span><br><span class="line">    <span class="keyword">private</span> Rect mRectText; <span class="comment">//月份</span></span><br><span class="line">    <span class="keyword">private</span> RectF mRectFInnerArc; <span class="comment">//文字</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Bitmap mBitmapCar; <span class="comment">//小汽车</span></span><br><span class="line">    <span class="keyword">private</span> Bitmap mBitmapPoint; <span class="comment">//指针</span></span><br><span class="line">    <span class="keyword">private</span> Matrix matrix ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> eventX ; <span class="comment">//手指按下的X坐标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> eventY ; <span class="comment">//手指按下的Y坐标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">mEvent</span> <span class="operator">=</span> MotionEvent.ACTION_UP;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 旋转的角度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> <span class="variable">mSweepAngle</span> <span class="operator">=</span> <span class="number">90</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FuelFillingView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context,<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FuelFillingView</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, attrs,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FuelFillingView</span><span class="params">(Context context, AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        <span class="built_in">this</span>.mContext =context;</span><br><span class="line"><span class="comment">//        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.FuelFillView, defStyleAttr, 0);</span></span><br><span class="line">        <span class="comment">//添加attr属性</span></span><br><span class="line"><span class="comment">//        selectedColor = a.getColor(R.styleable.FuelFillView_arcColor, Color.parseColor(&quot;#52adff&quot;));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        a.recycle();</span></span><br><span class="line">        init();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onSizeChanged</span><span class="params">(<span class="type">int</span> w, <span class="type">int</span> h, <span class="type">int</span> oldw, <span class="type">int</span> oldh)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        mViewWidth = w;</span><br><span class="line">        mViewHeight = h;</span><br><span class="line">        mRadius = mViewWidth / <span class="number">2</span> - dpToPx(<span class="number">10</span>);</span><br><span class="line">        mRadiusChoose = mViewWidth / <span class="number">2</span>;</span><br><span class="line">        mRadiusSmall = mRadius / <span class="number">2</span> - dpToPx(<span class="number">3</span>);</span><br><span class="line">        mRectFArc.set(-mRadius,-mRadius,mRadius,mRadius);</span><br><span class="line">        mRectFArcChoose.set(-mRadiusChoose,-mRadiusChoose,mRadiusChoose,mRadiusChoose);</span><br><span class="line">        mRectFArcSmall.set(-mRadiusSmall,-mRadiusSmall,mRadiusSmall,mRadiusSmall);</span><br><span class="line">        mPaintText.setTextSize(spToPx(<span class="number">12</span>));</span><br><span class="line">        mPaintText.getTextBounds(<span class="string">&quot;0&quot;</span>, <span class="number">0</span>, <span class="string">&quot;0&quot;</span>.length(), mRectText);</span><br><span class="line">        mRectFInnerArc.set(-mRadius+mScaleLongLenth+mRectText.height()+dpToPx(<span class="number">6</span>),</span><br><span class="line">                -mRadius+mScaleLongLenth+mRectText.height()+dpToPx(<span class="number">6</span>),</span><br><span class="line">                mRadius-mScaleLongLenth-mRectText.height()-dpToPx(<span class="number">6</span>),</span><br><span class="line">                mRadius-mScaleLongLenth-mRectText.height()-dpToPx(<span class="number">6</span>));</span><br><span class="line">        mBitmapCar = BitmapFactory.decodeResource(mContext.getResources(), R.drawable.icon_car);</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">mBitmap</span> <span class="operator">=</span> BitmapFactory.decodeResource(mContext.getResources(), R.drawable.pointer_icon);</span><br><span class="line">        <span class="comment">//将指针进行缩放和旋转进行适配</span></span><br><span class="line">        matrix.postScale(<span class="number">1.0f</span>,((<span class="type">float</span>) (mRadiusChoose-mRadiusSmall))/(<span class="type">float</span>) mBitmap.getHeight());</span><br><span class="line">        matrix.postRotate(-<span class="number">90</span>);</span><br><span class="line">        mBitmapPoint = Bitmap.createBitmap(mBitmap, <span class="number">0</span>, <span class="number">0</span>, mBitmap.getWidth(), mBitmap.getHeight(), matrix, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(!mBitmap.isRecycled())&#123;</span><br><span class="line">            mBitmap.recycle();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onMeasure</span><span class="params">(<span class="type">int</span> widthMeasureSpec, <span class="type">int</span> heightMeasureSpec)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> measureWidth(widthMeasureSpec);</span><br><span class="line">        setMeasuredDimension(width, width/<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据xml的设定获取宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">measureWidth</span><span class="params">(<span class="type">int</span> measureSpec)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">specMode</span> <span class="operator">=</span> MeasureSpec.getMode(measureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">specSize</span> <span class="operator">=</span> MeasureSpec.getSize(measureSpec);</span><br><span class="line">        <span class="comment">//wrap_content</span></span><br><span class="line">        <span class="keyword">if</span> (specMode == MeasureSpec.AT_MOST)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//match_parent或者精确值</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (specMode == MeasureSpec.EXACTLY)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> specSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        matrix = <span class="keyword">new</span> <span class="title class_">Matrix</span>();</span><br><span class="line">        mStrokeWidth = dpToPx(<span class="number">1</span>);</span><br><span class="line">        mScaleLongLenth = dpToPx(<span class="number">10</span>);</span><br><span class="line">        mScaleShortLenth = mScaleLongLenth / <span class="number">2</span>;</span><br><span class="line">        selectedColor = Color.parseColor(<span class="string">&quot;#52adff&quot;</span>);</span><br><span class="line">        unSelectedColor = Color.parseColor(<span class="string">&quot;#a1a5aa&quot;</span>);</span><br><span class="line">        backgroundColor = Color.parseColor(<span class="string">&quot;#ffffff&quot;</span>);</span><br><span class="line">        mTexts = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;&quot;</span>,<span class="string">&quot;及时充&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;3个月&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;6个月&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;12个月&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;24个月&quot;</span>,<span class="string">&quot;&quot;</span>&#125;;</span><br><span class="line">        mTextsValue = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;&quot;</span>,<span class="string">&quot;0折&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;9.8折&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;9.7折&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;9.6折&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;9.5折&quot;</span>,<span class="string">&quot;&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        mPaintArc = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        mPaintArc.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        mPaintArc.setColor(selectedColor);</span><br><span class="line">        mPaintArc.setStrokeWidth(mStrokeWidth);</span><br><span class="line">        mPaintArc.setStyle(Paint.Style.STROKE);</span><br><span class="line">        mPaintArc.setStrokeCap(Paint.Cap.ROUND);</span><br><span class="line"></span><br><span class="line">        mPaintArcChoose = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        mPaintArcChoose.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        mPaintArcChoose.setColor(Color.parseColor(<span class="string">&quot;#3352adff&quot;</span>));</span><br><span class="line">        mPaintArcChoose.setStrokeCap(Paint.Cap.ROUND);</span><br><span class="line"></span><br><span class="line">        mPaintArcSmall = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        mPaintArcSmall.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        mPaintArcSmall.setColor(backgroundColor);</span><br><span class="line">        mPaintArcSmall.setStrokeCap(Paint.Cap.ROUND);</span><br><span class="line"></span><br><span class="line">        mPaintText = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        mPaintText.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        mPaintText.setStyle(Paint.Style.FILL);</span><br><span class="line"></span><br><span class="line">        mRectFArc = <span class="keyword">new</span> <span class="title class_">RectF</span>();</span><br><span class="line">        mRectFArcChoose = <span class="keyword">new</span> <span class="title class_">RectF</span>();</span><br><span class="line">        mRectFArcSmall = <span class="keyword">new</span> <span class="title class_">RectF</span>();</span><br><span class="line">        mRectText = <span class="keyword">new</span> <span class="title class_">Rect</span>();</span><br><span class="line">        mRectFInnerArc = <span class="keyword">new</span> <span class="title class_">RectF</span>();</span><br><span class="line">        mPath = <span class="keyword">new</span> <span class="title class_">Path</span>();</span><br><span class="line"></span><br><span class="line">        setBackgroundColor(backgroundColor);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouchEvent</span><span class="params">(MotionEvent event)</span> &#123;</span><br><span class="line">        mEvent = event.getAction();</span><br><span class="line">        <span class="keyword">switch</span> (event.getAction())&#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                <span class="comment">//此处使用 getRawX，而不是 getX</span></span><br><span class="line">                eventX = event.getRawX();</span><br><span class="line">                eventY = event.getRawY();</span><br><span class="line">                invalidate();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_CANCEL:</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                <span class="comment">//让指针指向最近的数据，不需要则可注释</span></span><br><span class="line">                <span class="type">float</span> <span class="variable">surplus</span> <span class="operator">=</span> mSweepAngle % (sweepAngle / mSection);</span><br><span class="line">                <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)((mSweepAngle - surplus) / (sweepAngle / mSection));</span><br><span class="line">                <span class="keyword">if</span>(TextUtils.isEmpty(mTexts[num])&amp;&amp;!TextUtils.isEmpty(mTexts[num+<span class="number">1</span>]))&#123;</span><br><span class="line">                    mSweepAngle = mSweepAngle + (sweepAngle / mSection) - surplus;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!TextUtils.isEmpty(mTexts[num]))&#123;</span><br><span class="line">                    mSweepAngle = mSweepAngle - surplus;</span><br><span class="line">                &#125;</span><br><span class="line">                invalidate();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] pts = &#123;eventX,eventY&#125;;</span><br><span class="line"></span><br><span class="line">        canvas.translate(mViewWidth/<span class="number">2</span>,mViewHeight);<span class="comment">//将画布中心移动到控件底部中间</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mEvent==MotionEvent.ACTION_DOWN||mEvent==MotionEvent.ACTION_MOVE)&#123;</span><br><span class="line">            changeCanvasXY(canvas,pts);<span class="comment">//触摸点的坐标转换</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        drawArc(canvas);<span class="comment">//画选中的圆弧和未被选中的圆弧</span></span><br><span class="line"></span><br><span class="line">        drawLongLenth(canvas);<span class="comment">//画选中和未选中的长刻度</span></span><br><span class="line"></span><br><span class="line">        drawShortLenth(canvas);<span class="comment">//画选中和未选中的短刻度</span></span><br><span class="line"></span><br><span class="line">        drawText(canvas);<span class="comment">//画刻度上的文字</span></span><br><span class="line"></span><br><span class="line">        drawBlueArc(canvas);<span class="comment">//画选中的蓝色扇形</span></span><br><span class="line"></span><br><span class="line">        drawPoint(canvas); <span class="comment">//画指针</span></span><br><span class="line"></span><br><span class="line">        drawWhiteArc(canvas);<span class="comment">//画内部白色扇形</span></span><br><span class="line"></span><br><span class="line">        drawCar(canvas);<span class="comment">//画小汽车</span></span><br><span class="line"></span><br><span class="line">        drawValue(canvas); <span class="comment">//画折扣价</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">changeCanvasXY</span><span class="params">(Canvas canvas,<span class="type">float</span>[] pts)</span>&#123;</span><br><span class="line">        <span class="comment">// 获得当前矩阵的逆矩阵</span></span><br><span class="line">        <span class="type">Matrix</span> <span class="variable">invertMatrix</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix</span>();</span><br><span class="line">        canvas.getMatrix().invert(invertMatrix);</span><br><span class="line">        <span class="comment">// 使用 mapPoints 将触摸位置转换为画布坐标</span></span><br><span class="line">        invertMatrix.mapPoints(pts);</span><br><span class="line">        <span class="type">float</span> <span class="variable">x</span> <span class="operator">=</span> Math.abs(pts[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">float</span> <span class="variable">y</span> <span class="operator">=</span> Math.abs(pts[<span class="number">1</span>]);</span><br><span class="line">        <span class="type">double</span> <span class="variable">z</span> <span class="operator">=</span> Math.sqrt(x*x+y*y);</span><br><span class="line">        <span class="type">float</span> <span class="variable">round</span> <span class="operator">=</span> (<span class="type">float</span>)(Math.asin(y/z)/Math.PI*<span class="number">180</span>);</span><br><span class="line">        LogUtils.e(<span class="string">&quot;触摸的点：X===&quot;</span>+pts[<span class="number">0</span>]+<span class="string">&quot;Y===&quot;</span>+pts[<span class="number">1</span>]+<span class="string">&quot;===当前角度：&quot;</span>+round);</span><br><span class="line">        <span class="keyword">if</span>(pts[<span class="number">0</span>]&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            mSweepAngle =  round;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            mSweepAngle = sweepAngle - round;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawArc</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        mPaintArc.setColor(selectedColor);</span><br><span class="line">        canvas.drawArc(mRectFArc,startAngle,mSweepAngle,<span class="literal">false</span>,mPaintArc);</span><br><span class="line">        mPaintArc.setColor(unSelectedColor);</span><br><span class="line">        canvas.drawArc(mRectFArc,startAngle+mSweepAngle,sweepAngle-mSweepAngle,<span class="literal">false</span>,mPaintArc);</span><br><span class="line">        canvas.save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawLongLenth</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="type">float</span> <span class="variable">x0</span> <span class="operator">=</span> (<span class="type">float</span>) (- mRadius + mStrokeWidth);</span><br><span class="line">        <span class="type">float</span> <span class="variable">x1</span> <span class="operator">=</span> (<span class="type">float</span>) (- mRadius + mStrokeWidth + mScaleLongLenth);</span><br><span class="line">        mPaintArc.setStrokeWidth(mStrokeWidth*<span class="number">2</span>);</span><br><span class="line">        mPaintArc.setColor(selectedColor);</span><br><span class="line">        canvas.drawLine(x0, <span class="number">0</span>, x1, <span class="number">0</span>, mPaintArc);</span><br><span class="line">        <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> sweepAngle * <span class="number">1f</span> / mSection;</span><br><span class="line">        mPaintArc.setStrokeWidth(mStrokeWidth);</span><br><span class="line">        <span class="type">float</span> <span class="variable">selectSection</span> <span class="operator">=</span> mSweepAngle / (sweepAngle / mSection);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= selectSection; i++) &#123;</span><br><span class="line">            canvas.rotate(angle, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            canvas.drawLine(x0, <span class="number">0</span>, x1, <span class="number">0</span>, mPaintArc);</span><br><span class="line">        &#125;</span><br><span class="line">        mPaintArc.setColor(unSelectedColor);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; mSection - selectSection; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == mSection - (<span class="type">int</span>)selectSection - <span class="number">1</span>)&#123;</span><br><span class="line">                mPaintArc.setStrokeWidth(mStrokeWidth*<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            canvas.rotate(angle, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            canvas.drawLine(x0, <span class="number">0</span>, x1, <span class="number">0</span>, mPaintArc);</span><br><span class="line">        &#125;</span><br><span class="line">        canvas.restore();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawShortLenth</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        canvas.save();</span><br><span class="line">        mPaintArc.setStrokeWidth(mStrokeWidth/<span class="number">2</span>);</span><br><span class="line">        mPaintArc.setColor(selectedColor);</span><br><span class="line">        <span class="type">float</span> <span class="variable">x0</span> <span class="operator">=</span> (<span class="type">float</span>) (- mRadius + mStrokeWidth);</span><br><span class="line">        <span class="type">float</span> <span class="variable">x2</span> <span class="operator">=</span> (<span class="type">float</span>) (- mRadius + mStrokeWidth + mScaleShortLenth);</span><br><span class="line">        canvas.drawLine(x0, <span class="number">0</span>, x2, <span class="number">0</span>, mPaintArc);</span><br><span class="line">        <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> sweepAngle * <span class="number">1f</span> / (mSection*mPortion);</span><br><span class="line">        <span class="type">float</span> <span class="variable">mSelectSection</span> <span class="operator">=</span> mSweepAngle / (sweepAngle / (mSection*mPortion));</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= mSelectSection ; i++) &#123;</span><br><span class="line">            canvas.rotate(angle, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            canvas.drawLine(x0, <span class="number">0</span>, x2, <span class="number">0</span>, mPaintArc);</span><br><span class="line">        &#125;</span><br><span class="line">        mPaintArc.setColor(unSelectedColor);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= (mSection * mPortion - mSelectSection); i++) &#123;</span><br><span class="line">            canvas.rotate(angle, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            canvas.drawLine(x0, <span class="number">0</span>, x2, <span class="number">0</span>, mPaintArc);</span><br><span class="line">        &#125;</span><br><span class="line">        canvas.restore();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawText</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        mPaintText.setTextSize(spToPx(<span class="number">12</span>));</span><br><span class="line">        mPaintText.setTextAlign(Paint.Align.LEFT);</span><br><span class="line">        mPaintText.setTypeface(Typeface.DEFAULT);</span><br><span class="line">        <span class="type">float</span> <span class="variable">mSectionSelect</span> <span class="operator">=</span> mSweepAngle / (sweepAngle / mSection);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; mTexts.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==(<span class="type">int</span>)mSectionSelect)&#123;</span><br><span class="line">                mPaintText.setColor(selectedColor);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                mPaintText.setColor(unSelectedColor);</span><br><span class="line">            &#125;</span><br><span class="line">            mPaintText.getTextBounds(mTexts[i], <span class="number">0</span>, mTexts[i].length(), mRectText);</span><br><span class="line">            <span class="comment">// 粗略把文字的宽度视为圆心角2*θ对应的弧长，利用弧长公式得到θ，下面用于修正角度</span></span><br><span class="line">            <span class="type">float</span> θ = (<span class="type">float</span>) (<span class="number">180</span> * mRectText.width() / <span class="number">2</span> /</span><br><span class="line">                    (Math.PI * (mRadius - mScaleShortLenth - mRectText.height())));</span><br><span class="line">            mPath.reset();</span><br><span class="line">            mPath.addArc(</span><br><span class="line">                    mRectFInnerArc,</span><br><span class="line">                    startAngle + i * (sweepAngle / mSection) - θ, <span class="comment">// 正起始角度减去θ使文字居中对准长刻度</span></span><br><span class="line">                    sweepAngle</span><br><span class="line">            );</span><br><span class="line">            canvas.drawTextOnPath(mTexts[i], mPath, <span class="number">0</span>, <span class="number">0</span>, mPaintText);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawBlueArc</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        canvas.drawArc(mRectFArcChoose,startAngle,mSweepAngle,<span class="literal">true</span>,mPaintArcChoose);</span><br><span class="line">        canvas.save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawPoint</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        canvas.rotate(mSweepAngle, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        canvas.drawBitmap(mBitmapPoint,-mRadiusChoose,-mBitmapPoint.getHeight()/<span class="number">2</span>,<span class="literal">null</span>);</span><br><span class="line">        canvas.restore();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawWhiteArc</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        canvas.drawArc(mRectFArcSmall,startAngle,sweepAngle,<span class="literal">true</span>,mPaintArcSmall);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawCar</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        canvas.drawBitmap(mBitmapCar,-mBitmapCar.getWidth()/<span class="number">2</span>,-mRadiusSmall/<span class="number">2</span>-mBitmapCar.getHeight(),<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawValue</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        mPaintText.setTextSize(dpToPx(<span class="number">24</span>));</span><br><span class="line">        mPaintText.setTextAlign(Paint.Align.CENTER);</span><br><span class="line">        mPaintText.setColor(Color.parseColor(<span class="string">&quot;#252c3d&quot;</span>));</span><br><span class="line">        mPaintText.setTypeface(Typeface.DEFAULT_BOLD);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(mSweepAngle / (sweepAngle / mSection));</span><br><span class="line">        <span class="keyword">if</span>(!TextUtils.isEmpty(mTextsValue[num]))&#123;</span><br><span class="line">            canvas.drawText(mTextsValue[num],<span class="number">0</span>, -dpToPx(<span class="number">12</span>),mPaintText);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            canvas.drawText(mTextsValue[num+<span class="number">1</span>],<span class="number">0</span>, -dpToPx(<span class="number">12</span>),mPaintText);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">dpToPx</span><span class="params">(<span class="type">int</span> dp)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, getResources().getDisplayMetrics());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">spToPx</span><span class="params">(<span class="type">int</span> sp)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, sp, getResources().getDisplayMetrics());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置长刻度上的文字数组和对应显示的值的数组，跟据数组个数来等分刻度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> texts</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTextsArray</span><span class="params">(String[] texts,String[] textsValue)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(texts==<span class="literal">null</span>||texts.length==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.mTexts = texts;</span><br><span class="line">        <span class="built_in">this</span>.mTextsValue = textsValue;</span><br><span class="line">        <span class="built_in">this</span>.mSection = texts.length - <span class="number">1</span>;</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看代码应该就看懂了，难点有一个，就是用到了逆矩阵，一开始我没想到这个方法，计算的角度总是不对，后来发现这个方法好使。使用event.getRawX()获取屏幕坐标，使用下面的方法转换为画布坐标后就轻松计算出了触摸点到中心点的角度。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">changeCanvasXY</span><span class="params">(Canvas canvas,<span class="type">float</span>[] pts)</span>&#123;</span><br><span class="line">    <span class="comment">// 获得当前矩阵的逆矩阵</span></span><br><span class="line">    <span class="type">Matrix</span> <span class="variable">invertMatrix</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix</span>();</span><br><span class="line">    canvas.getMatrix().invert(invertMatrix);</span><br><span class="line">    <span class="comment">// 使用 mapPoints 将触摸位置转换为画布坐标</span></span><br><span class="line">    invertMatrix.mapPoints(pts);</span><br><span class="line">    <span class="type">float</span> <span class="variable">x</span> <span class="operator">=</span> Math.abs(pts[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">float</span> <span class="variable">y</span> <span class="operator">=</span> Math.abs(pts[<span class="number">1</span>]);</span><br><span class="line">    <span class="type">double</span> <span class="variable">z</span> <span class="operator">=</span> Math.sqrt(x*x+y*y);</span><br><span class="line">    <span class="type">float</span> <span class="variable">round</span> <span class="operator">=</span> (<span class="type">float</span>)(Math.asin(y/z)/Math.PI*<span class="number">180</span>);</span><br><span class="line">    LogUtils.e(<span class="string">&quot;触摸的点：X===&quot;</span>+pts[<span class="number">0</span>]+<span class="string">&quot;Y===&quot;</span>+pts[<span class="number">1</span>]+<span class="string">&quot;===当前角度：&quot;</span>+round);</span><br><span class="line">    <span class="keyword">if</span>(pts[<span class="number">0</span>]&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">        mSweepAngle =  round;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        mSweepAngle = sweepAngle - round;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大家可以根据自己的思路画成一个整圆，也可以自己给这个view添加attr属性进行设置，添加接口来获取选择的数据等，看大家的需要了。</p><blockquote><p>参考链接：<br><a href="http://www.gcssloop.com/customview/CustomViewIndex">http://www.gcssloop.com/customview/CustomViewIndex</a><br><a href="https://github.com/woxingxiao/DashboardView">https://github.com/woxingxiao/DashboardView</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;快要过年了，在这里提前祝小伙伴们&lt;strong&gt;新年快乐&lt;/strong&gt;！&lt;br&gt;新的一年，要多写点有质量的技术博客，哈哈。&lt;br&gt;上个月写了个自定义控件，也是我们项目的新需求，我就拿出来放在DEMO里，给大家参考一下，说实话这也是我自己正儿八经地写自定义控件。以前没写过</summary>
      
    
    
    
    <category term="Android" scheme="https://blog.zzming.cn/categories/Android/"/>
    
    
    <category term="自定义View" scheme="https://blog.zzming.cn/tags/%E8%87%AA%E5%AE%9A%E4%B9%89View/"/>
    
  </entry>
  
  <entry>
    <title>旧时光的瓶子</title>
    <link href="https://blog.zzming.cn/post/3a57339.html"/>
    <id>https://blog.zzming.cn/post/3a57339.html</id>
    <published>2016-11-05T20:46:20.000Z</published>
    <updated>2024-07-21T08:00:59.487Z</updated>
    
    <content type="html"><![CDATA[<p>听听海边的风，沙子在我脚下流动<br>月亮从夜幕中浮起<br>潮水在暗涌<br>漂亮的贝壳已经被人拾去<br>我只能捧起这湿润的沙<br>装在旧时光的瓶子里</p><p>你的笑容总是浮现在我的梦<br>好像是前世的情<br>化作了今生的债<br>离开海边，沙子也会寂寞<br>不知道会过多久才明白<br>你所逃离的，正是你渴望的</p><p>远方的朋友<br>因为分离让我们彼此变得这般陌生<br>而今天的偶遇<br>是生命的轨迹，在岁月中重逢吗<br>你有了苍苍白发<br>而我已看不清</p><p>当潮水一次又一次<br>淹没了我的脚印<br>当手中的沙子反反复复<br>从指缝间逃走<br>我明白这旧时光的瓶子里<br>装的是自己</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;听听海边的风，沙子在我脚下流动&lt;br&gt;月亮从夜幕中浮起&lt;br&gt;潮水在暗涌&lt;br&gt;漂亮的贝壳已经被人拾去&lt;br&gt;我只能捧起这湿润的沙&lt;br&gt;装在旧时光的瓶子里&lt;/p&gt;
&lt;p&gt;你的笑容总是浮现在我的梦&lt;br&gt;好像是前世的情&lt;br&gt;化作了今生的债&lt;br&gt;离开海边，沙子也会寂寞&lt;b</summary>
      
    
    
    
    <category term="随笔" scheme="https://blog.zzming.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
</feed>
